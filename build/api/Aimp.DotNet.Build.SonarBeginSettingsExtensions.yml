### YamlMime:ManagedReference
items:
- uid: Aimp.DotNet.Build.SonarBeginSettingsExtensions
  commentId: T:Aimp.DotNet.Build.SonarBeginSettingsExtensions
  id: SonarBeginSettingsExtensions
  parent: Aimp.DotNet.Build
  children:
  - Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir(Aimp.DotNet.Build.SonarBeginSettings,System.String)
  - Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2(Aimp.DotNet.Build.SonarBeginSettings,System.Boolean)
  langs:
  - csharp
  - vb
  name: SonarBeginSettingsExtensions
  nameWithType: SonarBeginSettingsExtensions
  fullName: Aimp.DotNet.Build.SonarBeginSettingsExtensions
  type: Class
  source:
    remote:
      path: build/SonarQube/SonarQubeBeginSettingsExtensions.cs
      branch: develop
      repo: https://github.com/martin211/aimp_dotnet.git
    id: SonarBeginSettingsExtensions
    path: SonarQube/SonarQubeBeginSettingsExtensions.cs
    startLine: 5
  assemblies:
  - _build
  namespace: Aimp.DotNet.Build
  syntax:
    content: public static class SonarBeginSettingsExtensions
    content.vb: Public Module SonarBeginSettingsExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir(Aimp.DotNet.Build.SonarBeginSettings,System.String)
  commentId: M:Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir(Aimp.DotNet.Build.SonarBeginSettings,System.String)
  id: SetProjectBaseDir(Aimp.DotNet.Build.SonarBeginSettings,System.String)
  isExtensionMethod: true
  parent: Aimp.DotNet.Build.SonarBeginSettingsExtensions
  langs:
  - csharp
  - vb
  name: SetProjectBaseDir(SonarBeginSettings, String)
  nameWithType: SonarBeginSettingsExtensions.SetProjectBaseDir(SonarBeginSettings, String)
  fullName: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir(Aimp.DotNet.Build.SonarBeginSettings, System.String)
  type: Method
  source:
    remote:
      path: build/SonarQube/SonarQubeBeginSettingsExtensions.cs
      branch: develop
      repo: https://github.com/martin211/aimp_dotnet.git
    id: SetProjectBaseDir
    path: SonarQube/SonarQubeBeginSettingsExtensions.cs
    startLine: 8
  assemblies:
  - _build
  namespace: Aimp.DotNet.Build
  summary: <p><em>Sets <see cref="!:SonarQubeBeginSettings.ProjectBaseDir"></see>.</em></p><p>Use this property when you need analysis to take place in a directory other than the one from which it starts. E.G. analysis begins from jenkins/jobs/myjob/workspace but the files to be analyzed are in ftpdrop/cobol/project1. The path may be relative or absolute. Specify not the the source directory, but some parent of the source directory. The value specified here becomes the new &quot;analysis directory&quot;, and other paths are then specified as though the analysis were starting from the new sonar.projectBaseDir. Note that the analysis process will need write permissions in this directory; it is where the sonar.working.directory will be created.</p>
  example: []
  syntax:
    content: >-
      [Pure]

      public static SonarBeginSettings SetProjectBaseDir(this SonarBeginSettings toolSettings, string projectBaseDir)
    parameters:
    - id: toolSettings
      type: Aimp.DotNet.Build.SonarBeginSettings
    - id: projectBaseDir
      type: System.String
    return:
      type: Aimp.DotNet.Build.SonarBeginSettings
    content.vb: >-
      <Pure>

      <ExtensionAttribute>

      Public Shared Function SetProjectBaseDir(toolSettings As SonarBeginSettings, projectBaseDir As String) As SonarBeginSettings
  overload: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir*
  attributes:
  - type: JetBrains.Annotations.PureAttribute
    ctor: JetBrains.Annotations.PureAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2(Aimp.DotNet.Build.SonarBeginSettings,System.Boolean)
  commentId: M:Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2(Aimp.DotNet.Build.SonarBeginSettings,System.Boolean)
  id: SetVerbose2(Aimp.DotNet.Build.SonarBeginSettings,System.Boolean)
  isExtensionMethod: true
  parent: Aimp.DotNet.Build.SonarBeginSettingsExtensions
  langs:
  - csharp
  - vb
  name: SetVerbose2(SonarBeginSettings, Boolean)
  nameWithType: SonarBeginSettingsExtensions.SetVerbose2(SonarBeginSettings, Boolean)
  fullName: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2(Aimp.DotNet.Build.SonarBeginSettings, System.Boolean)
  type: Method
  source:
    remote:
      path: build/SonarQube/SonarQubeBeginSettingsExtensions.cs
      branch: develop
      repo: https://github.com/martin211/aimp_dotnet.git
    id: SetVerbose2
    path: SonarQube/SonarQubeBeginSettingsExtensions.cs
    startLine: 16
  assemblies:
  - _build
  namespace: Aimp.DotNet.Build
  syntax:
    content: public static SonarBeginSettings SetVerbose2(this SonarBeginSettings toolSettings, bool value)
    parameters:
    - id: toolSettings
      type: Aimp.DotNet.Build.SonarBeginSettings
    - id: value
      type: System.Boolean
    return:
      type: Aimp.DotNet.Build.SonarBeginSettings
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function SetVerbose2(toolSettings As SonarBeginSettings, value As Boolean) As SonarBeginSettings
  overload: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Aimp.DotNet.Build
  commentId: N:Aimp.DotNet.Build
  name: Aimp.DotNet.Build
  nameWithType: Aimp.DotNet.Build
  fullName: Aimp.DotNet.Build
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir*
  commentId: Overload:Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir
  name: SetProjectBaseDir
  nameWithType: SonarBeginSettingsExtensions.SetProjectBaseDir
  fullName: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetProjectBaseDir
- uid: Aimp.DotNet.Build.SonarBeginSettings
  commentId: T:Aimp.DotNet.Build.SonarBeginSettings
  parent: Aimp.DotNet.Build
  name: SonarBeginSettings
  nameWithType: SonarBeginSettings
  fullName: Aimp.DotNet.Build.SonarBeginSettings
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2*
  commentId: Overload:Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2
  name: SetVerbose2
  nameWithType: SonarBeginSettingsExtensions.SetVerbose2
  fullName: Aimp.DotNet.Build.SonarBeginSettingsExtensions.SetVerbose2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
